@using Faker.Model
@inherits BaseFieldComponent

@if (Field != null)
{
    @switch (Field.Field.FieldType)
    {
        case FieldType.Gender:
        case FieldType.Simple:
        case FieldType.Avatar:
            <StringField Field="Field" RemoveRequested="RemoveField"></StringField>
            break;
        case FieldType.ImageDataUri:
            <ImageDataUri Field="Field" RemoveRequested="RemoveField"></ImageDataUri>
            break;
        case FieldType.ImageLoremFlickrUrl:
            <ImageLoremFlickrUrl Field="Field" RemoveRequested="RemoveField"></ImageLoremFlickrUrl>
            break;
        case FieldType.ImageLoremPixelUrl:
            <ImageLoremPixelUrl Field="Field" RemoveRequested="RemoveField"></ImageLoremPixelUrl>
            break;
        case FieldType.ImagePicsumUrl:
            <ImagePicsumUrl Field="Field" RemoveRequested="RemoveField"></ImagePicsumUrl>
            break;
        case FieldType.ImagePlaceholderUrl:
            <ImagePlaceholderUrl Field="Field" RemoveRequested="RemoveField"></ImagePlaceholderUrl>
            break;
        case FieldType.StreetAddress:
            <StreetAddress Field="Field" RemoveRequested="RemoveField"></StreetAddress>
            break;
        case FieldType.Latitude:
            <Latitude Field="Field" RemoveRequested="RemoveField"></Latitude>
            break;
        case FieldType.Longitude:
            <Longitude Field="Field" RemoveRequested="RemoveField"></Longitude>
            break;
        case FieldType.Price:
            <Price Field="Field" RemoveRequested="RemoveField"></Price>
            break;
        case FieldType.Categories:
            <Categories Field="Field" RemoveRequested="RemoveField"></Categories>
            break;
        case FieldType.Past:
            <Past Field="Field" RemoveRequested="RemoveField"></Past>
            break;
        case FieldType.PastOffset:
            <PastOffset Field="Field" RemoveRequested="RemoveField"></PastOffset>
            break;
        case FieldType.Soon:
            <Soon Field="Field" RemoveRequested="RemoveField"></Soon>
            break;
        case FieldType.SoonOffset:
            <SoonOffset Field="Field" RemoveRequested="RemoveField"></SoonOffset>
            break;
        case FieldType.Future:
            <Future Field="Field" RemoveRequested="RemoveField"></Future>
            break;

        case FieldType.FutureOffset:
            <FutureOffset Field="Field" RemoveRequested="RemoveField"></FutureOffset>
            break;
        case FieldType.Account:
            <Account Field="Field" RemoveRequested="RemoveField"></Account>
            break;
        case FieldType.Amount:
            <Amount Field="Field" RemoveRequested="RemoveField"></Amount>
            break;
        case FieldType.CreditCardNumber:
            <CreditCardNumber Field="Field" RemoveRequested="RemoveField"></CreditCardNumber>
            break;
        case FieldType.Iban:
            <Iban Field="Field" RemoveRequested="RemoveField"></Iban>
            break;

        case FieldType.Email:
            <Email Field="Field" RemoveRequested="RemoveField"></Email>
            break;

        case FieldType.ExampleEmail:
            <ExampleEmail Field="Field" RemoveRequested="RemoveField"></ExampleEmail>
            break;
        case FieldType.UserName:
            <UserName Field="Field" RemoveRequested="RemoveField"></UserName>
            break;
        case FieldType.UserNameUnicode:
            <UserNameUnicode Field="Field" RemoveRequested="RemoveField"></UserNameUnicode>
            break;
        case FieldType.Password:
            <Password Field="Field" RemoveRequested="RemoveField"></Password>
            break;
        case FieldType.Letter:
            <Letter Field="Field" RemoveRequested="RemoveField"></Letter>
            break;
        case FieldType.Sentence:
            <Sentence Field="Field" RemoveRequested="RemoveField"></Sentence>
            break;
        case FieldType.Paragraph:
            <Paragraph Field="Field" RemoveRequested="RemoveField"></Paragraph>
            break;
        case FieldType.Slug:
            <Slug Field="Field" RemoveRequested="RemoveField"></Slug>
            break;

        case FieldType.FirstName:
            <FirstName Field="Field" RemoveRequested="RemoveField"></FirstName>
            break;
        case FieldType.LastName:
            <LastName Field="Field" RemoveRequested="RemoveField"></LastName>
            break;
        case FieldType.FullName:
            <FullName Field="Field" RemoveRequested="RemoveField"></FullName>
            break;
        case FieldType.Prefix:
            <Prefix Field="Field" RemoveRequested="RemoveField"></Prefix>
            break;
        case FieldType.FindName:
            <FindName Field="Field" RemoveRequested="RemoveField"></FindName>
            break;
        default:
            <StringField Field="Field" RemoveRequested="RemoveField"></StringField>
            break;
    }
}

